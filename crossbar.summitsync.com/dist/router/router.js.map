{"version":3,"sources":["router/router.js"],"names":["autobahnConnection","AutobahnConnection","Router","connect","connection","onopen","session","register","UsersServices","getUsers","then","console","log","reg","procedure","err","open","router"],"mappings":";;;;;;;;AAAA;;;;AAEA;;;;;;;;AAEA,IAAIA,qBAAqB,IAAIC,oBAAJ,EAAzB;;IAEqBC,M;AACjB,sBAAc;AAAA;;AACV,aAAKC,OAAL;AACH;;;;kCAES;AACNH,+BAAmBI,UAAnB,CAA8BC,MAA9B,GAAuC,UAACC,OAAD,EAAa;AAChDA,wBAAQC,QAAR,CAAiB,gBAAjB,EAAmCC,mBAAcC,QAAjD,EACKC,IADL,CACU,eAAO;AACTC,4BAAQC,GAAR,CAAY,2BAAZ,EAAyCC,IAAIC,SAA7C;AACH,iBAHL,EAGO,eAAO;AACNH,4BAAQC,GAAR,CAAY,8BAAZ,EAA4CG,GAA5C;AACH,iBALL;AAMH,aAPD;AAQAf,+BAAmBI,UAAnB,CAA8BY,IAA9B;AACH;;;;;;kBAfgBd,M;;;AAkBrB,IAAIe,SAAS,IAAIf,MAAJ,EAAb","file":"router.js","sourcesContent":["import UsersServices from '../users/services';\n\nimport AutobahnConnection from './connection';\n\nvar autobahnConnection = new AutobahnConnection();\n\nexport default class Router {\n    constructor() {\n        this.connect();\n    }\n\n    connect() {\n        autobahnConnection.connection.onopen = (session) => {            \n            session.register('users.getUsers', UsersServices.getUsers)\n                .then(reg => {\n                    console.log('procedure was registered ', reg.procedure);\n                }, err => {\n                    console.log('error registaring procedure ', err);\n                });\n        }        \n        autobahnConnection.connection.open();\n    }\n}\n\nvar router = new Router();"]}