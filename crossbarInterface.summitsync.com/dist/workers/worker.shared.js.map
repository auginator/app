{"version":3,"sources":["workers/worker.shared.js"],"names":["SharedWorker","WorkerBase","worker","self","onconnect","console","log","e","port","ports","onmessage","sendMessage","msg","data"],"mappings":";;;;;;AAAA;;;;;;;;;;;;IAEqBA,Y;;;AACjB,4BAAc;AAAA;;AAAA;AAEb;;;EAHqCC,gB;;kBAArBD,Y;;;AAMrB,IAAIE,SAAS,IAAIF,YAAJ,EAAb;AACA,CAAC,UAAUG,IAAV,EAAgB;AACbA,SAAKC,SAAL,GAAiB,aAAK;;AAElBC,gBAAQC,GAAR,CAAY,kBAAZ,EAAgCC,CAAhC;;AAEA,YAAIC,OAAOD,EAAEE,KAAF,CAAQ,CAAR,CAAX;AACAD,aAAKE,SAAL,GAAiB,eAAO;AACpBR,mBAAOS,WAAP,CAAmBC,IAAIC,IAAvB;AACH,SAFD;AAGH,KARD;AASH,CAVD,EAUG,OAAOV,IAAP,KAAgB,WAAhB,GAA8BA,IAA9B,GAAqC,EAVxC","file":"worker.shared.js","sourcesContent":["import WorkerBase from './worker.base';\n\nexport default class SharedWorker extends WorkerBase {\n    constructor() {\n        super();\n    }\n}\n\nlet worker = new SharedWorker();\n(function (self) {\n    self.onconnect = e => {\n\n        console.log('WORKER CONNECTED', e);\n\n        let port = e.ports[0];\n        port.onmessage = msg => {\n            worker.sendMessage(msg.data);\n        }\n    }\n})(typeof self !== 'undefined' ? self : {});"]}