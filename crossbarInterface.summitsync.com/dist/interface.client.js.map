{"version":3,"sources":["interface.client.js"],"names":["instance","CrossbarInterfaceClient","callbacks","initWorker","config","id","callbackId","handler","addCallback","resolve","reject","ttl","messagingAgent","send","namespace","parameters","path","type","callback","status","response","error","err","Error","Object","assign","ex","console","log","MessengerInitializer","get","msg","triggerCallback","CrossbarInterface"],"mappings":";;;;;;;;;;AAAA;;;;AACA;;;;;;;;;;;;AAEA,IAAIA,WAAW,IAAf;;IACqBC,uB;;;AACjB,uCAAc;AAAA;;AAAA;;AAAA;;AAEV,YAAI,CAACD,QAAL,EAAe;AACX,kBAAKE,SAAL,GAAiB,EAAjB;AACA,kBAAKC,UAAL;AACAH;AACH;;AAED,sBAAOA,QAAP;AACH;;;;wCAEeI,M,EAAQC,E,EAAI;AACxB,gBAAIC,mBAAJ;AACA,gBAAIF,UAAUA,OAAOG,OAArB,EAA8B;AAC1BD,6BAAa,KAAKE,WAAL,CAAiBJ,OAAOG,OAAP,CAAeE,OAAhC,EAAyCL,OAAOG,OAAP,CAAeG,MAAxD,EAAgEN,OAAOG,OAAP,CAAeI,GAA/E,CAAb;AACH;AACD,iBAAKC,cAAL,CAAoBC,IAApB,CAAyB;AACrBC,2BAAWV,OAAOU,SADG;AAErBC,4BAAYX,OAAOW,UAFE;AAGrBC,sBAAMZ,OAAOY,IAHQ;AAIrBX,sBAJqB;AAKrBC,sCALqB;AAMrBW,sBAAMb,OAAOa;AANQ,aAAzB;AAQH;;;wCAEeC,Q,EAAUb,E,EAAIc,M,EAAQC,Q,EAAUC,K,EAAO;AACnD,gBAAI;AACA,oBAAIF,WAAW,OAAf,EAAwB;AACpBD,6BAAST,OAAT,CAAiBW,QAAjB;AACH,iBAFD,MAEO;AACH,wBAAIE,MAAMD,QAAS,QAAOA,KAAP,yCAAOA,KAAP,OAAiB,QAAjB,IAA6B,EAAEA,iBAAiBE,KAAnB,CAA7B,GAAyDC,OAAOC,MAAP,CAAc,IAAIF,KAAJ,EAAd,EAA2BF,KAA3B,CAAzD,GAA6F,IAAIE,KAAJ,CAAUF,KAAV,CAAtG,GAA0H,IAApI;AACAH,6BAASR,MAAT,CAAgBY,OAAOD,KAAvB;AACH;AACJ,aAPD,CAOE,OAAOK,EAAP,EAAW;AACTC,wBAAQC,GAAR,CAAY,yBAAZ,EAAuCF,EAAvC;AACH;AACJ;;;qCAEY;AAAA;;AACT,iBAAKd,cAAL,GAAsBiB,oBAAqBC,GAArB,CAAyB,eAAO;AAAA,oBAC5CzB,EAD4C,GACZ0B,GADY,CAC5C1B,EAD4C;AAAA,oBACxCc,MADwC,GACZY,GADY,CACxCZ,MADwC;AAAA,oBAChCC,QADgC,GACZW,GADY,CAChCX,QADgC;AAAA,oBACtBC,KADsB,GACZU,GADY,CACtBV,KADsB;;AAElD,oBAAI,OAAKnB,SAAL,CAAeG,EAAf,CAAJ,EAAwB;AACpB,wBAAIa,WAAW,OAAKhB,SAAL,CAAeG,EAAf,CAAf;AACA,2BAAK2B,eAAL,CAAqBd,QAArB,EAA+Bb,EAA/B,EAAmCc,MAAnC,EAA2CC,QAA3C,EAAqDC,KAArD;;AAEA,wBAAIV,MAAMO,SAASP,GAAnB;AACA,wBAAI,CAACA,GAAD,IAAQ,OAAOA,GAAP,KAAe,WAAvB,IAAsCA,QAAQ,IAA9C,IAAuDA,OAAO,CAAP,IAAYA,QAAQ,CAAC,CAAhF,EAAoF;AAChF,+BAAO,OAAKT,SAAL,CAAeG,EAAf,CAAP;AACH,qBAFD,MAEO;AACH,4BAAIM,QAAQ,CAAC,CAAb,EAAgB;AACZO,qCAASP,GAAT;AACH;AACJ;AACJ;AACJ,aAfqB,EAenB,eAAO;AACNgB,wBAAQC,GAAR,CAAY,mBAAZ,EAAiCN,GAAjC;AACH,aAjBqB,CAAtB;AAkBH;;;;EA3DgDW,mB;;kBAAhChC,uB","file":"interface.client.js","sourcesContent":["import CrossbarInterface from './interface';\nimport MessengerInitializer from './messengers/messenger.initializer';\n\nvar instance = null;\nexport default class CrossbarInterfaceClient extends CrossbarInterface {\n    constructor() {\n        super();\n        if (!instance) {\n            this.callbacks = {};\n            this.initWorker();\n            instance = this;\n        }\n\n        return instance;\n    }\n\n    requestCallback(config, id) {\n        let callbackId;\n        if (config && config.handler) {\n            callbackId = this.addCallback(config.handler.resolve, config.handler.reject, config.handler.ttl);\n        }\n        this.messagingAgent.send({\n            namespace: config.namespace,\n            parameters: config.parameters,\n            path: config.path,\n            id,\n            callbackId,\n            type: config.type\n        });\n    }\n\n    triggerCallback(callback, id, status, response, error) {\n        try {\n            if (status !== 'error') {\n                callback.resolve(response);\n            } else {\n                let err = error ? (typeof error === 'object' && !(error instanceof Error) ? Object.assign(new Error(), error) : new Error(error)) : null;\n                callback.reject(err || error);\n            }\n        } catch (ex) {\n            console.log('triggerCallback error: ', ex);\n        }\n    }\n\n    initWorker() {\n        this.messagingAgent = MessengerInitializer.get(msg => {\n            let { id, status, response, error } = msg;\n            if (this.callbacks[id]) {\n                let callback = this.callbacks[id];\n                this.triggerCallback(callback, id, status, response, error);\n\n                let ttl = callback.ttl;\n                if (!ttl || typeof ttl === 'undefined' || ttl === null || (ttl <= 1 && ttl !== -1)) {\n                    delete this.callbacks[id];\n                } else {\n                    if (ttl !== -1) {\n                        callback.ttl--;\n                    }\n                }\n            }\n        }, err => {\n            console.log('Worker On Error: ', err);\n        })\n    }\n}"]}